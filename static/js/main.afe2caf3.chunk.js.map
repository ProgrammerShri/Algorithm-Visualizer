{"version":3,"sources":["SortingVisualizer/colorCodes.js","algorithms/mergesort.js","algorithms/swap.js","algorithms/insertion.js","algorithms/quicksort.js","algorithms/heapsort.js","SortingVisualizer/sounds/resetEffect.mp3","SortingVisualizer/sounds/completedEffect.mp3","SortingVisualizer/sounds/sortingStart.mp3","SortingVisualizer/sounds/sortingCompleted.mp3","Icons/github-icon.png","SortingVisualizer/Visualizer.js","algorithms/bubblesort.js","algorithms/selectionsort.js","App.js","index.js"],"names":["colors","primaryColor","afterSortingColor","pivotActiveColor","sortedElementColor","cyan","orange","count","mergesort","arr","low","high","animationSpeed","aux","push","mid","Math","floor","right","left","k","arrayBars","document","getElementsByClassName","li","ri","counter","barIdx","i","setTimeout","style","backgroundColor","height","length","swap","j","temp","quicksortHelper","speed","pivot","partition","pivotElement","tempI","setColor","color","swapHeights","heapify","n","largest","leftChild","rightChild","sort","generateRandomNumber","random","Visualizer","useState","mainArray","setMainArray","arrayLength","setArrayLength","setAnimationSpeed","algo","setAlgo","able","setAble","resetEffect","Audio","ResetEffect","completedEffect","CompletedEffect","sortingStart","SortingStart","sortingCompleted","SortingCompleted","useEffect","populateArray","items","pointerEvents","disabled","size","play","tempArr","item","idx","val","colorEveryElement","sortedArray","bubbleSortAnimate","map","swapped","x","bubbleSort","mergeSort","mergeSortAnimation","insertionSortAnimate","insertionSort","selectionSortAnimate","minIdx","oldMinIdx","selectionSort","quicksortAnimate","quicksort","heapsortAnimate","heapsort","className","htmlFor","name","id","value","onChange","e","target","onClick","startSorting","type","min","max","src","githubIcon","alt","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.afe2caf3.chunk.js","sourcesContent":["const colors = {\r\n  primaryColor: \"#dd85e7\",\r\n  afterSortingColor: \"#1481BA\",\r\n  pivotActiveColor: \"#ff2400\",\r\n  sortedElementColor: \"#4cbb17\",\r\n  cyan: \"#40E0D0\",\r\n  orange: \"#FFA500\",\r\n};\r\n\r\nexport default colors;\r\n","import colors from '../SortingVisualizer/colorCodes';\r\n\r\nlet count = 0;\r\n\r\nexport const mergeSortAnimation = (tempArr, animationSpeed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tcount = 0;\r\n\tconst sortedArray = mergesort(arr, 0, arr.length - 1, animationSpeed);\r\n\treturn { sortedArray, count };\r\n};\r\n\r\nconst mergesort = (arr, low, high, animationSpeed) => {\r\n\tif (low > high) {\r\n\t\treturn [];\r\n\t}\r\n\r\n\tif (low === high) {\r\n\t\tlet aux = [];\r\n\t\taux.push(arr[low]);\r\n\t\treturn aux;\r\n\t}\r\n\r\n\tlet mid = Math.floor((high + low) / 2);\r\n\r\n\t// recursively divide the array until its sorted\r\n\t// in the end it will only have a single item and sorted :)\r\n\r\n\tconst right = mergesort(arr, low, mid, animationSpeed);\r\n\tconst left = mergesort(arr, mid + 1, high, animationSpeed);\r\n\r\n\tconst aux = [];\r\n\tlet k = low;\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\n\tlet li = 0,\r\n\t\tri = 0; // for left and right array respectively\r\n\twhile (li < left.length && ri < right.length) {\r\n\t\tlet counter = count;\r\n\t\tlet barIdx = k;\r\n\r\n\t\tif (left[li] < right[ri]) {\r\n\t\t\taux.push(left[li]);\r\n\t\t\tlet i = li;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${left[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tli++;\r\n\t\t} else {\r\n\t\t\taux.push(right[ri]);\r\n\t\t\tlet i = ri;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${right[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tri++;\r\n\t\t}\r\n\t\tk++;\r\n\t\tcount++;\r\n\t}\r\n\r\n\t// left exhausted\r\n\tif (li === left.length) {\r\n\t\twhile (ri < right.length) {\r\n\t\t\taux.push(right[ri]);\r\n\t\t\tlet barIdx = k;\r\n\t\t\tlet i = ri;\r\n\t\t\tlet counter = count;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${right[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tri++;\r\n\t\t\tcount++;\r\n\t\t\tk++;\r\n\t\t}\r\n\t} else if (ri === right.length) {\r\n\t\twhile (li < left.length) {\r\n\t\t\taux.push(left[li]);\r\n\t\t\tlet barIdx = k;\r\n\t\t\tlet i = li;\r\n\t\t\tlet counter = count;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[barIdx].style.height = `${left[i]}px`;\r\n\t\t\t}, counter * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t}, (counter + 1) * animationSpeed);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[barIdx].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (counter + 1.5) * animationSpeed);\r\n\t\t\tli++;\r\n\t\t\tk++;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t}\r\n\treturn aux;\r\n};\r\n","export function swap(i, j, arr = []) {\r\n\tlet temp = arr[i];\r\n\tarr[i] = arr[j];\r\n\tarr[j] = temp;\r\n}\r\n","import colors from '../SortingVisualizer/colorCodes';\r\nimport { swap } from './swap';\r\nexport const insertionSort = (tempArr, speed) => {\r\n\tlet count = 0;\r\n\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\tconst arr = tempArr.map(item => item.val);\r\n\r\n\tfor (let i = 1; i < arr.length; i++) {\r\n\t\t// color current comparing value\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = colors.orange;\r\n\t\t\tarrayBars[i - 1].style.backgroundColor = colors.orange;\r\n\t\t}, count++ * speed);\r\n\r\n\t\tlet j = i;\r\n\t\twhile (j > 0 && arr[j] < arr[j - 1]) {\r\n\t\t\tlet k = j; /* to avoid es line error */\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (k !== i)\r\n\t\t\t\t\tarrayBars[k].style.backgroundColor = colors.sortedElementColor;\r\n\t\t\t\tarrayBars[k - 1].style.backgroundColor = colors.sortedElementColor;\r\n\r\n\t\t\t\tlet temp = arrayBars[k].style.height;\r\n\t\t\t\tarrayBars[k].style.height = arrayBars[k - 1].style.height;\r\n\t\t\t\tarrayBars[k - 1].style.height = temp;\r\n\t\t\t}, count++ * speed);\r\n\r\n\t\t\tswap(j, j - 1, arr);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (k !== i) arrayBars[k].style.backgroundColor = colors.primaryColor;\r\n\t\t\t\tarrayBars[k - 1].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, count++ * speed);\r\n\t\t\tj--;\r\n\t\t}\r\n\t\t// set the color to normal color\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = colors.primaryColor;\r\n\t\t\tarrayBars[i - 1].style.backgroundColor = colors.primaryColor;\r\n\t\t}, count * speed);\r\n\t}\r\n\treturn { arr, count };\r\n};\r\n","import colors from '../SortingVisualizer/colorCodes';\r\nimport { swap } from './swap';\r\n\r\nconst arrayBars = document.getElementsByClassName('arrayBar');\r\nlet count = 0;\r\n\r\nexport const quicksort = (tempArr, animationSpeed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tcount = 0;\r\n\tlet low = 0;\r\n\tlet high = arr.length - 1;\r\n\r\n\t// main quicksort function\r\n\tquicksortHelper(arr, low, high, animationSpeed);\r\n\tcount += 2;\r\n\treturn { arr, count };\r\n};\r\n\r\nconst quicksortHelper = (arr, low, high, speed) => {\r\n\tif (low > high) return;\r\n\r\n\tlet pivot = partition(arr, low, high, speed);\r\n\r\n\t// Colors the element which is in its correct place\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[pivot].style.backgroundColor = colors.sortedElementColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tquicksortHelper(arr, low, pivot - 1, speed);\r\n\tquicksortHelper(arr, pivot + 1, high, speed);\r\n};\r\n\r\nconst partition = (arr, low, high, speed) => {\r\n\tlet pivotElement = arr[high];\r\n\r\n\t// Colors the current pivot index\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[high].style.backgroundColor = colors.pivotActiveColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tlet i = low;\r\n\tfor (let j = low; j < high; j++) {\r\n\t\t// animate the curr traversing element\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = colors.cyan;\r\n\t\t}, count * speed);\r\n\t\tcount += 2;\r\n\r\n\t\t// color primary to the curr traversing element\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = colors.primaryColor;\r\n\t\t}, count * speed);\r\n\t\tcount++;\r\n\r\n\t\tif (pivotElement > arr[j]) {\r\n\t\t\tlet tempI = i;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[tempI].style.backgroundColor = colors.orange;\r\n\r\n\t\t\t\tlet temp = arrayBars[tempI].style.height;\r\n\t\t\t\tarrayBars[tempI].style.height = arrayBars[j].style.height;\r\n\t\t\t\tarrayBars[j].style.height = temp;\r\n\t\t\t}, count * speed);\r\n\t\t\tcount++;\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[tempI].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, (count + 1) * speed);\r\n\t\t\tcount++;\r\n\r\n\t\t\tswap(i, j, arr);\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\t// resets the color of pivot element to primary\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[high].style.backgroundColor = colors.primaryColor;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tsetTimeout(() => {\r\n\t\tlet temp = arrayBars[i].style.height;\r\n\t\tarrayBars[i].style.height = arrayBars[high].style.height;\r\n\t\tarrayBars[high].style.height = temp;\r\n\t}, count * speed);\r\n\tcount++;\r\n\r\n\tswap(i, high, arr);\r\n\treturn i;\r\n};\r\n","import { swap } from './swap';\r\nimport colors from '../SortingVisualizer/colorCodes';\r\n\r\nlet count = 0;\r\n\r\nconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\nexport const heapsort = (tempArr, speed) => {\r\n\tcount = 0;\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tsort(arr, arr.length, speed);\r\n\treturn { arr, count };\r\n};\r\n\r\nconst setColor = (speed, color, i, j) => {\r\n\tif (i) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[i].style.backgroundColor = color;\r\n\t\t}, count * speed);\r\n\t}\r\n\r\n\tif (j) {\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[j].style.backgroundColor = color;\r\n\t\t}, count * speed);\r\n\t}\r\n\tcount++;\r\n};\r\nconst swapHeights = (speed, color, i, j) => {\r\n\tsetTimeout(() => {\r\n\t\tarrayBars[i].style.backgroundColor = color;\r\n\t\tarrayBars[j].style.backgroundColor = color;\r\n\r\n\t\tlet temp = arrayBars[i].style.height;\r\n\t\tarrayBars[i].style.height = arrayBars[j].style.height;\r\n\t\tarrayBars[j].style.height = temp;\r\n\t}, count * speed);\r\n\r\n\tcount++;\r\n};\r\n// heapify\r\nconst heapify = (arr, i, n, speed) => {\r\n\tlet largest = i;\r\n\tlet leftChild = i * 2 + 1;\r\n\tlet rightChild = i * 2 + 2;\r\n\r\n\tif (leftChild < n && arr[leftChild] > arr[largest]) largest = leftChild;\r\n\r\n\tif (rightChild < n && arr[rightChild] > arr[largest]) largest = rightChild;\r\n\r\n\tif (largest !== i) {\r\n\t\tswap(i, largest, arr);\r\n\r\n\t\t// color\r\n\t\tswapHeights(speed, colors.pivotActiveColor, i, largest);\r\n\t\tsetColor(speed, colors.primaryColor, i, largest);\r\n\t\theapify(arr, largest, n, speed);\r\n\t}\r\n};\r\n\r\n// sort\r\nconst sort = (arr, n, speed) => {\r\n\t// arrange the array\r\n\tfor (let i = Math.floor(n / 2) - 1; i >= 0; i--) {\r\n\t\theapify(arr, i, n, speed);\r\n\t}\r\n\r\n\tcount += 3;\r\n\t// one by one extract the element from heap\r\n\t// and put them at back\r\n\tfor (let i = n - 1; i >= 0; i--) {\r\n\t\tswap(i, 0, arr);\r\n\t\tswapHeights(speed, colors.orange, i, 0);\r\n\t\tcount += 2;\r\n\r\n\t\tsetColor(speed, colors.sortedElementColor, i);\r\n\t\theapify(arr, 0, i, speed);\r\n\t}\r\n};\r\n","export default __webpack_public_path__ + \"static/media/resetEffect.af1cdbbb.mp3\";","export default __webpack_public_path__ + \"static/media/completedEffect.b461f47f.mp3\";","export default __webpack_public_path__ + \"static/media/sortingStart.7ad8e144.mp3\";","export default __webpack_public_path__ + \"static/media/sortingCompleted.36b5acac.mp3\";","export default __webpack_public_path__ + \"static/media/github-icon.fcf5f80d.png\";","import React, { useState, useEffect } from \"react\";\r\nimport colors from \"./colorCodes\";\r\n// import GithubIcon from \"../Icons/GithubIcon\";\r\nimport { mergeSortAnimation } from \"../algorithms/mergesort\";\r\nimport { insertionSort } from \"../algorithms/insertion\";\r\nimport { selectionSort } from \"../algorithms/selectionsort\";\r\nimport { bubbleSort } from \"../algorithms/bubblesort\";\r\nimport { quicksort } from \"../algorithms/quicksort\";\r\nimport { heapsort } from \"../algorithms/heapsort\";\r\n// stylesheet\r\nimport \"./SortingVisualizer.css\";\r\n// Sounds\r\nimport ResetEffect from \"./sounds/resetEffect.mp3\";\r\nimport CompletedEffect from \"./sounds/completedEffect.mp3\";\r\nimport SortingStart from \"./sounds/sortingStart.mp3\";\r\nimport SortingCompleted from \"./sounds/sortingCompleted.mp3\";\r\n// Icon\r\n\r\nimport githubIcon from \"../Icons/github-icon.png\";\r\n\r\n// Random Number Genrator\r\nconst generateRandomNumber = (i, j) => {\r\n  return Math.floor(i + Math.random() * (j - i));\r\n};\r\n\r\nconst Visualizer = () => {\r\n  // state of the array\r\n  const [mainArray, setMainArray] = useState([]);\r\n  const [arrayLength, setArrayLength] = useState(20);\r\n  const [animationSpeed, setAnimationSpeed] = useState(100);\r\n  const [algo, setAlgo] = useState(\"mergesort\");\r\n  const [able, setAble] = useState(true);\r\n\r\n  //Project Sounds\r\n\r\n  let resetEffect = new Audio(ResetEffect); // Play audio when bar reset\r\n  let completedEffect = new Audio(CompletedEffect);\r\n  let sortingStart = new Audio(SortingStart);\r\n  let sortingCompleted = new Audio(SortingCompleted);\r\n\r\n  //Render the Array Before DOM loades\r\n  useEffect(() => {\r\n    if (able) populateArray(arrayLength);\r\n  }, [arrayLength, able]);\r\n\r\n  // ABLE / DISABLE BUTTONS ETC.\r\n  useEffect(() => {\r\n    const items = document.getElementsByClassName(\"able\");\r\n\r\n    if (!able) {\r\n      for (let i = 0; i < items.length; i++) {\r\n        items[i].style.pointerEvents = \"none\";\r\n        items[i].disabled = true;\r\n      }\r\n    } else {\r\n      for (let i = 0; i < items.length; i++) {\r\n        items[i].style.pointerEvents = \"auto\";\r\n        items[i].disabled = false;\r\n      }\r\n    }\r\n  }, [able]);\r\n\r\n  const populateArray = (size) => {\r\n    resetEffect.play(); // play resetEffect here\r\n    const tempArr = [];\r\n    for (let i = 0; i < size; i++) {\r\n      const item = {\r\n        idx: i,\r\n        val: generateRandomNumber(25, 500),\r\n      };\r\n      tempArr.push(item);\r\n      if (document.getElementsByClassName(\"arrayBar\")[i] != null) {\r\n        document.getElementsByClassName(\"arrayBar\")[i].style.backgroundColor =\r\n          colors.primaryColor;\r\n      }\r\n    }\r\n    if (able) setMainArray(tempArr);\r\n  };\r\n\r\n  // colors every elements afte sorting\r\n  const colorEveryElement = (arr, counter) => {\r\n    setTimeout(() => {\r\n      completedEffect.play(); // Play audion when bar will sorted\r\n      sortingCompleted.play();\r\n      const sortedArray = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        document.getElementsByClassName(\"arrayBar\")[i].style.backgroundColor =\r\n          colors.afterSortingColor;\r\n\r\n        sortedArray.push({\r\n          idx: i,\r\n          val: arr[i],\r\n        });\r\n      }\r\n\r\n      setMainArray(sortedArray);\r\n      setAble(true);\r\n    }, counter * animationSpeed);\r\n  };\r\n\r\n  // BUBBLE SORT\r\n  const bubbleSortAnimate = () => {\r\n    setAble(false);\r\n    const { arr, count } = bubbleSort(mainArray, animationSpeed);\r\n    colorEveryElement(arr, count + 1);\r\n  };\r\n\r\n  // MERGE SORT\r\n  const mergeSort = () => {\r\n    setAble(false);\r\n    const { sortedArray, count } = mergeSortAnimation(\r\n      mainArray,\r\n      animationSpeed\r\n    );\r\n    colorEveryElement(sortedArray, count + 5);\r\n  };\r\n\r\n  // INSERTION SORT\r\n  const insertionSortAnimate = () => {\r\n    setAble(false);\r\n    const { arr, count } = insertionSort(mainArray, animationSpeed);\r\n    colorEveryElement(arr, count + 1);\r\n  };\r\n\r\n  // SELECTION SORT\r\n  const selectionSortAnimate = () => {\r\n    setAble(false);\r\n    const { arr, count } = selectionSort(mainArray, animationSpeed);\r\n    colorEveryElement(arr, count + 2);\r\n  };\r\n\r\n  //QUICK SORT\r\n  const quicksortAnimate = () => {\r\n    setAble(false);\r\n    const { arr, count } = quicksort(mainArray, animationSpeed);\r\n    colorEveryElement(arr, count + 1);\r\n  };\r\n\r\n  // HEAP SORT\r\n  const heapsortAnimate = () => {\r\n    setAble(false);\r\n    const { arr, count } = heapsort(mainArray, animationSpeed);\r\n    colorEveryElement(arr, count + 1);\r\n  };\r\n  const startSorting = (algo) => {\r\n    sortingStart.play();\r\n    switch (algo) {\r\n      case \"bubblesort\":\r\n        bubbleSortAnimate();\r\n        break;\r\n\r\n      case \"mergesort\":\r\n        mergeSort();\r\n        break;\r\n\r\n      case \"selectionsort\":\r\n        selectionSortAnimate();\r\n        break;\r\n\r\n      case \"insertionsort\":\r\n        insertionSortAnimate();\r\n        break;\r\n      case \"quicksort\":\r\n        quicksortAnimate();\r\n        break;\r\n      case \"heapsort\":\r\n        heapsortAnimate();\r\n        break;\r\n      default:\r\n        mergeSort();\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"visualizeContainer\">\r\n          {mainArray.map((item) => {\r\n            return (\r\n              <div\r\n                className=\"arrayBar\"\r\n                style={{\r\n                  height: `${item.val}px`,\r\n                  backgroundColor: colors.primaryColor,\r\n                }}\r\n                key={item.idx}\r\n              >\r\n                {arrayLength < 31 && able && <span>{item.val}</span>}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"sidebar\">\r\n          <header>\r\n            Sorting Algorithm <br /> Visualizer\r\n          </header>\r\n          <div className=\"select-box able\">\r\n            <label htmlFor=\"algo\">Select Algorithm</label>\r\n\r\n            <select\r\n              name=\"algo\"\r\n              id=\"select\"\r\n              value={algo}\r\n              onChange={(e) => setAlgo(e.target.value)}\r\n              className=\"slt\"\r\n            >\r\n              <option value=\"mergesort\">Merge Sort</option>\r\n              <option value=\"bubblesort\">Bubble Sort</option>\r\n              <option value=\"insertionsort\">Insertion Sort</option>\r\n              <option value=\"selectionsort\">Selection Sort</option>\r\n              <option value=\"quicksort\">Quick Sort</option>\r\n              <option value=\"heapsort\">Heap Sort</option>\r\n            </select>\r\n          </div>\r\n          <button className=\"button able\" onClick={() => startSorting(algo)}>\r\n            Sort\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => populateArray(arrayLength)}\r\n            className=\"new-arr-btn button able\"\r\n          >\r\n            Random Bar\r\n          </button>\r\n\r\n          <div className=\"slider-container\">\r\n            <label>Length of Array : {arrayLength} </label>\r\n            <input\r\n              className=\"input-range able\"\r\n              type=\"range\"\r\n              value={arrayLength}\r\n              onChange={(e) => setArrayLength(e.target.value)}\r\n              min=\"7\"\r\n              max=\"150\"\r\n            />\r\n          </div>\r\n          <div className=\"slider-container\">\r\n            <label>Speed : {animationSpeed}</label>\r\n            <label>\r\n              Fast\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slow\r\n            </label>\r\n\r\n            <input\r\n              className=\"input-range able\"\r\n              type=\"range\"\r\n              value={animationSpeed}\r\n              onChange={(e) => setAnimationSpeed(e.target.value)}\r\n              min=\"100\"\r\n              max=\"1000\"\r\n            />\r\n          </div>\r\n          <span className=\"social\">\r\n            <img src={githubIcon} alt=\"githubIcon\" />{\" \"}\r\n          </span>\r\n          {/* <GithubIcon className={\"github-icon\"} /> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Visualizer;\r\n","import colors from '../SortingVisualizer/colorCodes';\r\n\r\nexport const bubbleSort = (tempArr, speed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tlet count = 0;\r\n\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\n\tfor (let i = 0; i < arr.length - 1; i++) {\r\n\t\tlet swapped = false;\r\n\t\tfor (let j = 0; j < arr.length - i - 1; j++) {\r\n\t\t\t// colors it up to active\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = colors.cyan;\r\n\t\t\t\tarrayBars[j + 1].style.backgroundColor = colors.cyan;\r\n\t\t\t}, count++ * speed);\r\n\r\n\t\t\tif (arr[j] > arr[j + 1]) {\r\n\t\t\t\t// swap the heights\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tarrayBars[j].style.backgroundColor = colors.pivotActiveColor;\r\n\t\t\t\t\tarrayBars[j + 1].style.backgroundColor = colors.pivotActiveColor;\r\n\r\n\t\t\t\t\tlet temp = arrayBars[j].style.height;\r\n\t\t\t\t\tarrayBars[j].style.height = arrayBars[j + 1].style.height;\r\n\t\t\t\t\tarrayBars[j + 1].style.height = temp;\r\n\t\t\t\t}, count++ * speed);\r\n\r\n\t\t\t\tcount += 1;\r\n\t\t\t\tswapped = true;\r\n\r\n\t\t\t\tlet temp = arr[j];\r\n\t\t\t\tarr[j] = arr[j + 1];\r\n\t\t\t\tarr[j + 1] = temp;\r\n\t\t\t}\r\n\t\t\t// color back to normal\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = colors.primaryColor;\r\n\t\t\t\tarrayBars[j + 1].style.backgroundColor = colors.primaryColor;\r\n\t\t\t}, count++ * speed);\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[arr.length - i - 1].style.backgroundColor =\r\n\t\t\t\tcolors.sortedElementColor;\r\n\t\t\tif (swapped === false) {\r\n\t\t\t\tfor (let x = 0; x < i; x++) {\r\n\t\t\t\t\tarrayBars[x].style.backgroundColor = colors.sortedElementColor;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, count * speed);\r\n\t\tif (swapped === false) break;\r\n\t}\r\n\r\n\treturn { arr, count };\r\n};\r\n","import { swap } from './swap';\r\n\r\nexport const selectionSort = (tempArr, speed) => {\r\n\tconst arr = tempArr.map(item => item.val);\r\n\tconst arrayBars = document.getElementsByClassName('arrayBar');\r\n\r\n\tlet count = 0;\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t// initially minidx is set to i\r\n\t\tlet minIdx = i;\r\n\r\n\t\t// change the color of the minIdx to red to identify\r\n\t\tsetTimeout(() => {\r\n\t\t\tarrayBars[minIdx].style.backgroundColor = 'red';\r\n\t\t}, count * speed);\r\n\t\tcount++;\r\n\r\n\t\t// traverse for the next smallest item\r\n\t\tfor (let j = i + 1; j < arr.length; j++) {\r\n\t\t\t// current item color to orange\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = 'orange';\r\n\t\t\t}, (count + 2) * speed);\r\n\r\n\t\t\tlet oldMinIdx;\r\n\t\t\tif (arr[j] < arr[minIdx]) {\r\n\t\t\t\toldMinIdx = minIdx;\r\n\t\t\t\tminIdx = j;\r\n\r\n\t\t\t\t// change the old minIdx to default color\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tarrayBars[oldMinIdx].style.backgroundColor = '#dd85e7';\r\n\t\t\t\t}, (count + 3) * speed);\r\n\t\t\t}\r\n\t\t\t// changing the current item to default color\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tarrayBars[j].style.backgroundColor = '#dd85e7';\r\n\t\t\t}, (count + 3) * speed);\r\n\t\t\tcount++;\r\n\t\t}\r\n\r\n\t\tswap(i, minIdx, arr);\r\n\r\n\t\t// swap the heights and color the sorted item green\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet temp = arrayBars[i].style.height;\r\n\t\t\tarrayBars[i].style.height = arrayBars[minIdx].style.height;\r\n\t\t\tarrayBars[minIdx].style.height = temp;\r\n\t\t\tarrayBars[i].style.backgroundColor = 'green';\r\n\t\t}, (count + 3) * speed);\r\n\t\tcount++;\r\n\t}\r\n\treturn { arr, count };\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Visualizer from './SortingVisualizer/Visualizer';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Visualizer />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}